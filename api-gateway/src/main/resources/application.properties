# ===============================
# Application Configuration
# ===============================
spring.application.name=api-gateway
server.port=8080
server.address=0.0.0.0

# ===============================
# JWT Configuration
# ===============================

jwt.secret.api=f45g6h9j2k3m5p7r9t0v1x3z4a6c8e1g5i8k0m2o4q6s9u2w5y8a1c4e7g0i3k6n9p
jwt.expiration-ms=86400000

# ===============================
# Service Discovery (Eureka)
# ===============================
spring.cloud.discovery.enabled=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true

# ===============================
# Enable Auto Routing
# ===============================
#spring.cloud.gateway.discovery.locator.enabled=true
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true

#CORS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedMethods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedHeaders=*
 
 
 # Spring Cloud Gateway Routing Configuration
 spring.cloud.gateway.routes[22].id=client-service
 spring.cloud.gateway.routes[22].uri=http://localhost:8081
 spring.cloud.gateway.routes[22].predicates[0]=Path=/client/**
 
 spring.cloud.gateway.routes[0].id=admin-service 
 spring.cloud.gateway.routes[0].uri=http://localhost:8082
 spring.cloud.gateway.routes[0].predicates[0]=Path=/admin/**
 
 spring.cloud.gateway.routes[1].id=user-service
 spring.cloud.gateway.routes[1].uri=http://localhost:8084
 spring.cloud.gateway.routes[1].predicates[0]=Path=/user/**
 
 spring.cloud.gateway.routes[2].id=merchant-service
 spring.cloud.gateway.routes[2].uri=http://localhost:8083
 spring.cloud.gateway.routes[2].predicates[0]=Path=/merchant/**
 
 spring.cloud.gateway.routes[3].id=email-service
 spring.cloud.gateway.routes[3].uri=http://localhost:8085
 spring.cloud.gateway.routes[3].predicates[0]=Path=/email/**
 
 spring.cloud.gateway.routes[4].id=otp-service
 spring.cloud.gateway.routes[4].uri=http://localhost:8086
 spring.cloud.gateway.routes[4].predicates[0]=Path=/otp/**
 
 spring.cloud.gateway.routes[5].id=place-service
 spring.cloud.gateway.routes[5].uri=http://localhost:8087
 spring.cloud.gateway.routes[5].predicates[0]=Path=/place/**
 
 spring.cloud.gateway.routes[6].id=explore-service
 spring.cloud.gateway.routes[6].uri=http://localhost:8088
 spring.cloud.gateway.routes[6].predicates[0]=Path=/explore/**
 
 spring.cloud.gateway.routes[7].id=category-service
 spring.cloud.gateway.routes[7].uri=http://localhost:8089
 spring.cloud.gateway.routes[7].predicates[0]=Path=/category/**
 
 spring.cloud.gateway.routes[8].id=eventsplace-service
 spring.cloud.gateway.routes[8].uri=http://localhost:8090
 spring.cloud.gateway.routes[8].predicates[0]=Path=/event/**
 
 spring.cloud.gateway.routes[9].id=tripplanner-service
 spring.cloud.gateway.routes[9].uri=http://localhost:8091
 spring.cloud.gateway.routes[9].predicates[0]=Path=/tripplanner/**
 
 spring.cloud.gateway.routes[10].id=navigation-service
 spring.cloud.gateway.routes[10].uri=http://localhost:8092
 spring.cloud.gateway.routes[10].predicates[0]=Path=/navigation/**
 
 spring.cloud.gateway.routes[11].id=location-service
 spring.cloud.gateway.routes[11].uri=http://localhost:8093
 spring.cloud.gateway.routes[11].predicates[0]=Path=/location/**

 spring.cloud.gateway.routes[12].id=media-service
 spring.cloud.gateway.routes[12].uri=http://localhost:8094
 spring.cloud.gateway.routes[12].predicates[0]=Path=/media/**
 
 spring.cloud.gateway.routes[13].id=weather-service
 spring.cloud.gateway.routes[13].uri=http://localhost:8095
 spring.cloud.gateway.routes[13].predicates[0]=Path=/weather/**
 
 spring.cloud.gateway.routes[14].id=wishlist-service
 spring.cloud.gateway.routes[14].uri=http://localhost:8096
 spring.cloud.gateway.routes[14].predicates[0]=Path=/wishlist/**
 
 spring.cloud.gateway.routes[15].id=filter-service
 spring.cloud.gateway.routes[15].uri=http://localhost:8097
 spring.cloud.gateway.routes[15].predicates[0]=Path=/filter/**
 
 spring.cloud.gateway.routes[16].id=payment-service
 spring.cloud.gateway.routes[16].uri=http://localhost:8098
 spring.cloud.gateway.routes[16].predicates[0]=Path=/payment/**
 
 spring.cloud.gateway.routes[17].id=booking-service
 spring.cloud.gateway.routes[17].uri=http://localhost:8099
 spring.cloud.gateway.routes[17].predicates[0]=Path=/booking/**
 
 spring.cloud.gateway.routes[18].id=notification-service
 spring.cloud.gateway.routes[18].uri=http://localhost:8100
 spring.cloud.gateway.routes[18].predicates[0]=Path=/notification/**
 
 spring.cloud.gateway.routes[19].id=rating-service
 spring.cloud.gateway.routes[19].uri=http://localhost:8101
 spring.cloud.gateway.routes[19].predicates[0]=Path=/rating/**
 
 spring.cloud.gateway.routes[20].id=review-service
 spring.cloud.gateway.routes[20].uri=http://localhost:8102
 spring.cloud.gateway.routes[20].predicates[0]=Path=/review/**
 
 spring.cloud.gateway.routes[21].id=emergency-service
 spring.cloud.gateway.routes[21].uri=http://localhost:8103
 spring.cloud.gateway.routes[21].predicates[0]=Path=/emergency/**
 
 spring.cloud.gateway.routes[23].id=authentication-service
 spring.cloud.gateway.routes[23].uri=http://localhost:8104
 spring.cloud.gateway.routes[23].predicates[0]=Path=/auth/**
 


# ===============================
# Spring Security Credentials
# ===============================
spring.security.user.name=mahee
spring.security.user.password=mahee

# ===============================
# JWT Resource Server (Optional if using JWT Validation)
# ===============================
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://your-issuer-url.com
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://your-issuer-url.com/.well-known/jwks.json

# ===============================
# Actuator Health Check
# ===============================
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always
management.health.diskspace.enabled=true
management.health.diskspace.threshold=104857600B

# ===============================
# Logging Configuration
# ===============================
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG


# ===============================
# Circuit Breaker (Resilience4j)
# ===============================
spring.cloud.circuitbreaker.enabled=true
resilience4j.circuitbreaker.instances.my-circuit-breaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.my-circuit-breaker.sliding-window-size=100
resilience4j.circuitbreaker.instances.my-circuit-breaker.wait-duration-in-open-state=5000ms
resilience4j.circuitbreaker.instances.my-circuit-breaker.permitted-number-of-calls-in-half-open-state=5


# === Spring Cloud Gateway Settings ===

# Optional timeout (for WebClient under the hood)
spring.cloud.gateway.httpclient.response-timeout=90s

# This helps ensure headers (including Host) are preserved when forwarding
spring.cloud.gateway.default-filters[0]=PreserveHostHeader

# === Error Handling Settings ===

# Show error messages in responses (from downstream services)
server.error.include-message=always

# Include binding errors in the response (e.g., DTO validation)
server.error.include-binding-errors=always

# Include stacktrace in response only when requested with `?trace=true`
server.error.include-stacktrace=on-param

